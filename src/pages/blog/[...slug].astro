---
import FooterWrapper from "@components/FooterWrapper.astro";
import Navbar from "@components/Navbar.astro";
import Layout from "@layouts/Layout.astro";
import { getCollection } from "astro:content";
import type { CollectionEntry } from "astro:content";
import { BlogSchema } from "src/schemas/blogSchema";
interface Props {
  entry: CollectionEntry<"blog">;
}

export async function getStaticPaths() {
  const blogEntries = await getCollection("blog");
  return blogEntries.map((entry) => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}

const { entry } = Astro.props;
const { title, description, date, hackerNews } = BlogSchema.parse(entry.data);
const { Content } = await entry.render();
---

<Layout title={title} description={description} openGraphType="article">
  <FooterWrapper>
    <Navbar />
    <div class="flex place-content-center bg-white dark:bg-black">
      <article class="prose mt-10 mb-10 ml-8 mr-8 dark:prose-invert">
        <hgroup>
          <h1 class="m-0">{title}</h1>
          <time datetime={date.toISOString()} class="text-sm">
            {date.toDateString()}
            {
              hackerNews && (
                <>
                  <span class="ml-3 mr-3">|</span>
                  {/* prettier-ignore */}
                  <a class="" href={hackerNews}>View comments on Hacker News</a>
                </>
              )
            }
          </time>
        </hgroup>
        <Content />
      </article>
    </div>
  </FooterWrapper>
</Layout>
